apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "workshop-example.fullname" . }}
  labels:
    app: {{ template "workshop-example.name" . }}
    chart: {{ template "workshop-example.chart" . }}
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
    {{- include "workshop-example.labels" . | nindent 4 }}
spec:
  serviceName: {{ template "workshop-example.fullname" . }}-headless
  replicas: 1
  selector:
    matchLabels:
      {{- include "workshop-example.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "workshop-example.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "workshop-example.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.environment }}
          env:
          {{- $releasename := .Release.Name -}}
          {{- range $key, $val := .Values.environment }}
            - name: {{ $key }}
              value: {{ $val | quote }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ .Values.healthchecks.livenessPath }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.healthchecks.readinessPath }}
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: workshop-configmap-files
              mountPath: /tmp/
              readOnly: true
            {{- if .Values.secret }}
            - name: workshop-secret-password
              mountPath: /opt/
              readOnly: true
            {{- end }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
      volumes:
        - name: workshop-configmap-files
          configMap:
            name: {{ template "workshop-example.fullname" . }}-configmap
        {{- if .Values.secret }}
        - name: workshop-secret-password
          secret:
            secretName: {{ .Release.Name }}-secret
            items:
              - key: password
                path: password
        {{- end }}
        {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
{{- end }}
